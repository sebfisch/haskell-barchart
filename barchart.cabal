Name:          barchart
Version:       0.1.1
Cabal-Version: >= 1.6
Synopsis:      Creating Bar Charts in Haskell

Description:

  This package provides a program that generates bar charts from CSV
  files and has special support for visualising the benchmark results
  of the criterion and progression tools. It comes with an associated
  API that can be used to generate custom bar charts in case the
  charts generated by the command-line program are insufficient for
  your needs.

Category:      Graphics
License:       BSD3
License-File:  LICENSE
Author:        Sebastian Fischer
Maintainer:    Sebastian Fischer
Bug-Reports:   http://github.com/sebfisch/haskell-barchart/issues
Homepage:      http://sebfisch.github.com/haskell-barchart
Build-Type:    Simple
Stability:     experimental

Extra-Source-Files:     README.markdown

Executable barchart
  Main-is:              barchart.hs
  Hs-Source-Dirs:       src
  Build-Depends:        base >= 3 && < 5,
                        cmdargs >= 0.2 && < 0.7,
                        csv >= 0.1 && < 1.2,
                        diagrams >= 0.2 && < 0.3,
                        filepath >= 1.1 && < 1.3
  Extensions:           DeriveDataTypeable,
                        FlexibleContexts,
                        GeneralizedNewtypeDeriving,
                        NamedFieldPuns, 
                        RecordWildCards,
                        TypeFamilies

Library
  Exposed-Modules:      Graphics.BarChart
  Other-Modules:        Graphics.BarChart.Types,
                        Graphics.BarChart.Rendering,
                        Graphics.BarChart.Parser,
                        Graphics.BarChart.Parser.Criterion,
                        Graphics.BarChart.Parser.Progression
  Hs-Source-Dirs:       src
  Build-Depends:        base >= 3 && < 5,
                        csv >= 0.1 && < 1.2, 
                        diagrams >= 0.2 && < 0.3,
                        filepath >= 1.1 && < 1.3
  Extensions:           FlexibleContexts,
                        GeneralizedNewtypeDeriving,
                        NamedFieldPuns, 
                        RecordWildCards,
                        TypeFamilies
